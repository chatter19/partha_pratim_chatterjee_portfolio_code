<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Partha Pratim Chatterjee</title>
    <link>https://chatter19.github.io/partha_pratim_chatterjee_portfolio/post/</link>
    <description>Recent content in Projects on Partha Pratim Chatterjee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate><atom:link href="https://chatter19.github.io/partha_pratim_chatterjee_portfolio/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>One API to rule them all</title>
      <link>https://chatter19.github.io/partha_pratim_chatterjee_portfolio/post/api/</link>
      <pubDate>Sat, 09 May 2020 13:58:08 -0400</pubDate>
      
      <guid>https://chatter19.github.io/partha_pratim_chatterjee_portfolio/post/api/</guid>
      <description> Develop a microservice backend to read data and write patient information and power the front end of the app Azure functions SQL alchemy Pytest unit and integration test Validate incoming post requests using json validator Auth0 implementation to create admin users API management gateway and policy administration Implemented a CI/CD pipeline to continuously test new code commits    </description>
    </item>
    
    <item>
      <title>Ready To Work: A covid Initiative</title>
      <link>https://chatter19.github.io/partha_pratim_chatterjee_portfolio/post/ready_to_work/</link>
      <pubDate>Sat, 09 May 2020 12:58:08 -0400</pubDate>
      
      <guid>https://chatter19.github.io/partha_pratim_chatterjee_portfolio/post/ready_to_work/</guid>
      <description> Azure functions Developed asa plugable interface and can be integrated with any frontend Asynchronous server processing using asyncio to allow it to scale Containerized scoring Queue Processing Custom logging in application insights Implemented a CI/CD pipeline to continuously test new code commits    </description>
    </item>
    
    <item>
      <title>IaC Platform</title>
      <link>https://chatter19.github.io/partha_pratim_chatterjee_portfolio/post/iac_platform/</link>
      <pubDate>Sat, 09 May 2020 10:58:08 -0400</pubDate>
      
      <guid>https://chatter19.github.io/partha_pratim_chatterjee_portfolio/post/iac_platform/</guid>
      <description>Designed and developed the Iac platform for my current employer to allow rapid and automatic deployment of client infrastructure and its corresponding configuration
 Automated infrastructure deployment using Terraform (immutable infrastructure) Automated configuration deployment using Ansible Version controlled image configuration using Packer Developed an automation testing framework leveraging Kitchen terraform Checked and plugged for infrastructure vulnerabilities using Chekov Implemented a CI/CD client infra deployment pipeline using Azure Devops Maintained and source controlled clientâ€™s infrastructure state using remote tfstate files      </description>
    </item>
    
    <item>
      <title>Extract, Transform and Load: Parsing EDI Claims</title>
      <link>https://chatter19.github.io/partha_pratim_chatterjee_portfolio/post/parser/</link>
      <pubDate>Mon, 10 Apr 2017 11:00:59 -0400</pubDate>
      
      <guid>https://chatter19.github.io/partha_pratim_chatterjee_portfolio/post/parser/</guid>
      <description>EDI or Electronic Data Interchange is a standard for a p2p exchange of business documents.
In this project, I created a parser that extracts PHI data from unstructured industry standard EDi files and generates a structured data format to be consumed by the downstream data pipeline
The parser has the following capabilities:   Developed a custom utility to asynchronously read and parse millions of files using asyncio
  The parser is developed as a pluggable interface and can be integrated in any pipeline as a library</description>
    </item>
    
  </channel>
</rss>
